name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    env:
      GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
      RELEASE_SIGNING_GRADLE: ${{ secrets.SIGNING_GRADLE }}
      RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
      GOOGLE_PLAY_SERVICE_JSON:  ${{ secrets.GOOGLE_PLAY_SERVICE_JSON }}
      SS_URL:  ${{ secrets.SS_URL }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setting Release Publish Files
        run: |
          mkdir -p app/src/release
          echo ${GOOGLE_SERVICES_JSON} | base64 -d > app/google-services.json
          echo ${RELEASE_SIGNING_GRADLE} | base64 -d > dependencies/signing.gradle
          echo ${RELEASE_KEYSTORE} | base64 -d > dependencies/release.keystore
          echo ${GOOGLE_PLAY_SERVICE_JSON} | base64 -d > google-play-service.json

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Create Release Messages
        run: |
          curl -L "${SS_URL}" > release_message.json
          ./gradlew setReleaseMessage

      - name: Build
        run: ./gradlew clean bundleRelease

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Publish Google Play
        run: ./gradlew publishBundle

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
          username: GHA_BOT
          icon_emoji: ':lion_face:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
